Міністерство освіти і науки України
Харківський національний університет радіоелектроніки



Кафедра ПІ




Звіт з лабораторної роботи №1
з дисципліни «Аналіз та рефакторинг коду»




 
Виконав:
ст. гр. ПЗПІ-22-8
Шапаренко Артем Васильович
Перевірив:
ст. викладач каф. ПІ
Сокорчук Ігор Петрович 







Харків 2024  
Тема: розробка Vision & Scope документа.
Мета: описати проект у форматі Vision & Scope.
Хід роботи:
1.1	Написати перший розділ. Описати актуальність проблем, які вирішує програма.
1.2	Написати другий розділ. Описати призначення системи, вказати її головні функціональні можливості.
1.3	Написати третій розділ. Описати функції кожної з частин систем.
1.4	Написати четвертий розділ. Описати усі технології, які будуть використані у проекті.
Висновок.
У результаті виконання даної лабораторної роботи було зроблено Vision & Scope документ (див. Додаток А).
 
Додаток А

Концепція та рамки проекту
«Програмна система для станцій обслуговування транспортних засобів»
Версія 1.0
Підготовлено ст. гр ПЗПІ-22-8 Шапаренко Артемом
Харківський Національний Університет Радіоелектроніки
15.11.2024 
Table of Contents

Table of Contents	2
Revision History	2
1.	Business Requirements	3
1.1.	Background	3
1.2.	Business Opportunity	3
2.	Vision of the Solution	4
2.1.	Vision Statement	4
2.2.	Major Features	4
3.	Scope and Limitations	6
3.1.	Scope of Initial Release	6
3.2.	Scope of Subsequent Releases	6
4.	Business Context	7
4.3.	Operating Environment	7





Revision History


Ім’я	Дата	Причини для змін	Версія
			
 
1.	Business Requirements
1.1.	Background
Сучасні станції обслуговування транспортних засобів стикаються з проблемою неефективного управління ресурсами та часу. Водії часто витрачають час на очікування в чергах або стикаються зі складнощами під час пошуку доступного майстра чи обладнання, що відповідає їхнім потребам. Зі зростанням кількості транспортних засобів і попиту на обслуговування виникає необхідність автоматизації процесів бронювання послуг.
Додатково, сучасні технології дозволяють впроваджувати IoT-пристрої для відстеження транспортних засобів, що значно підвищує прозорість та точність у роботі станцій. Це створює нові можливості для забезпечення кращого досвіду обслуговування клієнтів.
1.2.	Business Opportunity
Ринок обслуговування транспортних засобів демонструє стабільне зростання. Проте, значна кількість сервісних центрів все ще працює за застарілими моделями управління, що призводить до втрат часу клієнтів та ресурсів бізнесу.
Система автоматизованого бронювання та управління процесами обслуговування дозволить підвищити ефективність роботи станцій, зменшити час очікування клієнтів та створити конкурентну перевагу для сервісних центрів.
Порівняно з існуючими рішеннями, нова система надаватиме унікальну функціональність інтеграції IoT-пристроїв для моніторингу місцезнаходження транспортних засобів, що забезпечує прозорість і контроль на всіх етапах обслуговування.
2.	Vision of the Solution
2.1.	Vision Statement
Програмна система автоматизує процеси бронювання та управління обслуговуванням транспортних засобів. Вона об’єднує клієнтів та станції обслуговування в єдину екосистему, забезпечуючи прозорість, ефективність і комфорт. Інтеграція IoT-пристроїв дозволяє в реальному часі відстежувати стан транспортного засобу, оптимізуючи взаємодію клієнтів і працівників станції.
2.2.	Major Features
Програмна система для обслуговування транспортних засобів пропонує кілька ключових функціональностей, кожна з яких спрямована на полегшення взаємодії між водіями, майстрами та власниками станцій. Система підтримує три основні ролі: водії, технічні працівники (майстри) та власники станцій.
2.2.1	Функціональність для власників станцій
	Модуль аналітики ефективності роботи станції
Власники станцій отримують доступ до аналітичних звітів, які містять дані про кількість обслугованих автомобілів, завантаженість обладнання, ефективність роботи майстрів та прибутковість окремих послуг.
	Управління ресурсами станції
Власники можуть додавати або редагувати наявні ресурси (обладнання, послуги, робочі зміни майстрів). Зміни автоматично синхронізуються із системою, забезпечуючи актуальність даних для водіїв і майстрів.
	Контроль і моніторинг IoT-пристроїв
Власники можуть переглядати статус підключених IoT-пристроїв і відстежувати їх роботу. У разі несправностей система генерує попередження та рекомендації для усунення проблем.
2.2.2	Функціональність для технічних працівників (майстрів)
	Прозорий календар роботи
Система забезпечує майстрів доступом до календаря, де відображаються всі заплановані роботи. Майстри можуть переглядати список бронювань, обрані послуги та пов’язані з ними автомобілі, що дозволяє ефективніше планувати робочий час.
	Управління статусом обслуговування
Майстри можуть оновлювати статус роботи через інтерфейс: "очікує", "виконується", "завершено". Система зберігає ці дані, дозволяючи водіям та адміністраторам бачити прогрес у реальному часі.
2.2.3	Функціональність для водіїв
	Онлайн-бронювання послуг і обладнання
Водії можуть обирати послуги (наприклад, миття автомобіля, діагностику чи підйомник) та бронювати їх у зручний для себе час. Система перевіряє доступність обраного обладнання та майстрів, фіксує бронювання в базі даних і надає підтвердження.
	Відстеження місцезнаходження транспортного засобу через IoT-пристрої
Після прибуття на станцію IoT-пристрої починають відстежувати місцезнаходження автомобіля. Інформація синхронізується з сервером, що дозволяє водіям у реальному часі бачити статус обслуговування.
	Нагадування про заплановані послуги
Система автоматично надсилає повідомлення водіям про заплановані послуги або нагадування про наступні технічні перевірки. Дані про нагадування генеруються на основі історії бронювань та сервісного календаря.

3.	Scope and Limitations
3.1.	Scope of Initial Release
У першому випуску програмного продукту буде реалізовано базові функції для забезпечення ефективного управління процесами на станціях технічного обслуговування автомобілів. Основна увага приділяється інтеграції IoT а також її серверної частини.
3.1.1	Серверна частина
Серверна частина виступає центральним елементом системи, відповідальним за зберігання, обробці та збереженні даних водіїв, майстрів та власників даних (інформацію про послуги, графіки роботи та бронювання).
Сервер отримуватиме дані про запити на бронювання від користувачів, перевірятиме доступність обладнання та персоналу, реєструватиме бронювання й надсилатиме відповідні підтвердження або сповіщення.
Сервер надає функціонал реєстрації, авторизації та управління доступом для різних типів користувачів (водії, технічний персонал, адміністратори).
3.1.2	IoT-клієнт
IoT-клієнт інтегрує розумні пристрої, такі як датчик руху для автоматизації процесів відстеження транспортних засобів на станції техобслуговування.
Пристрої надсилатимуть сигнали для вказівки місцезнаходження автомобіля та завершення послуг.
IoT-клієнт передаватиме дані про місцезнаходження автомобілів та інші робочі параметри на сервер для подальшого аналізу.
3.2.	Scope of Subsequent Releases
У майбутніх випусках може бути додана розширена інтеграція IoT для більш детального відстеження, покращена аналітика для операторів станцій обслуговування а також розширений функціонал на мобілних та веб-застосунках.
3.2.1	Веб-клієнт
Веб-клієнт забезпечує доступ до функціоналу системи через веб-браузер, дозволяючи користувачам використовувати всі можливості без необхідності встановлення додаткового програмного забезпечення.
Користувачі можуть створювати, переглядати, змінювати або скасовувати бронювання на послуги.
Дозволяє водіям керувати своїми обліковими записами і статус поточних заявок.

3.2.2	Мобільний клієнт
Мобільний клієнт буде доступний для платформ Android. Основна мета мобільного застосунку — забезпечити швидкий і зручний доступ до функцій системи для водіїв та персоналу, використовуючи смартфони.
Надає можливість налаштування профілю користувача і створення нових бронювань.
Водії можуть переглядати розташування станції техобслуговування, а також статус своїх замовлень.
4.	Business Context
4.3.	Operating Environment
Серверна частина системи буде реалізована на платформі Java Spring Boot, що забезпечує створення високопродуктивного та масштабованого рішення для обробки запитів користувачів у реальному часі. Spring Boot надає засоби для розробки Spring Web, що вміщує у собі RESTful, які забезпечать взаємодію між веб- та мобільними клієнтами з сервером.
Для зберігання даних, таких як інформація про користувачів, записи про замовлення послуг та дані IoT-пристроїв, буде використовуватись PostgreSQL. Використовуючи транзакції, гарантується цілісність даних і надає можливість легкої масштабованості для підтримки зростаючої системи.
Для обробки автентифікації та авторизації користувачів система буде інтегрувати OAuth 2.0, що дозволить безпечно керувати доступом через зовнішні сервіси або за допомогою локальної аутентифікації. Це підвищить зручність користування для клієнтів.
Веб-клієнт буде реалізований на основі React.js, який забезпечить створення динамічного, зручного і адаптивного інтерфейсу користувача.
Мобільний клієнт буде розроблений за допомогою Kotlin, що дозволить створити нативні застосунки для Android із високою продуктивністю і гнучкістю. В майбутньому можливе розширення для створення iOS-застосунків. 
СПИСОК ВИКОРИСТАНИХ ДЖЕРЕЛ
Офіційна документація від Microsoft для створення стандартів, шаблонів і технічних матеріалів для розробників / URL: https://learn.microsoft.com/
Ресурс із готовими шаблонами для технічної документації Atlassian / URL: https://www.atlassian.com/software/confluence
Сайт із детальною документацією та прикладами MDN Web Docs / URL: https://developer.mozilla.org/en-US/docs/Web
Сайт спільноти з допомогою у питаннях програмування StackOverflow / URL: https://stackoverflow.com/

